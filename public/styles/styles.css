@charset "UTF-8";
/*
   Copyright 2018 Łukasz 'Severiaan' Grela GrelaDesign

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
body {
  margin: 0;
  padding: 0;
  font-family: sans-serif;
  color: #212121; }
@charset "UTF-8";
/*
   Copyright 2018 Łukasz 'Severiaan' Grela GrelaDesign

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
.no-match-404 {
  padding-top: 50px; }
  .no-match-404 .title {
    line-height: 3em; }
    .no-match-404 .title .sign {
      font-size: 1.5em;
      vertical-align: top;
      color: #FFEB3B; }
    .no-match-404 .title .digit {
      font-size: 3em; }
      .no-match-404 .title .digit.d1 {
        color: #388E3C; }
      .no-match-404 .title .digit.d2 {
        color: #8BC34A; }
      .no-match-404 .title .digit.d3 {
        color: #CDDC39; }
@charset "UTF-8";
/*
   Copyright 2018 Łukasz 'Severiaan' Grela GrelaDesign

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
.menu {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%); }
  @media only screen and (min-device-width: 414px) and (orientation: landscape) {
    .menu {
      transform: translate(-50%, -30%); } }
  .menu button {
    border: none;
    background: none;
    padding: 0;
    margin: 5px;
    width: 70px;
    height: 70px;
    overflow: visible; }
    .menu button svg {
      width: 70px;
      height: 70px;
      -webkit-transition: all .5s ease;
      transition: all .5s ease; }
    .menu button:hover svg {
      transform: rotate(1turn); }
    .menu button #button-icon-plus {
      fill: #388E3C; }
    .menu button #button-icon-minus {
      fill: #8BC34A; }
    .menu button #button-icon-multiply {
      fill: #CDDC39; }
    .menu button #button-icon-divide {
      fill: #FFEB3B; }
    .menu button .badge {
      position: absolute;
      padding: 4px;
      border-radius: 4px;
      min-width: 20px;
      z-index: 1; }
    .menu button.addition .badge {
      background-color: #FFEB3B;
      right: 140px;
      top: -5px; }
    .menu button.subtraction .badge {
      background-color: #CDDC39;
      top: -5px;
      left: 140px; }
    .menu button.multiplication .badge {
      background-color: #8BC34A;
      right: 140px;
      bottom: -5px; }
    .menu button.division .badge {
      background-color: #388E3C;
      left: 140px;
      bottom: -5px; }
@charset "UTF-8";
/*
   Copyright 2018 Łukasz 'Severiaan' Grela GrelaDesign

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
.about {
  padding: 1em;
  text-align: left;
  width: 320px;
  margin: 0 auto; }
  .about .title {
    font-size: 2em;
    line-height: 3em; }
  .about .acknowledgement {
    color: #757575; }
  .about .git-source {
    padding: 1rem 0; }
    .about .git-source .git-hub-icon {
      vertical-align: bottom;
      width: 1.4rem;
      height: 1.4rem;
      padding-right: 0.4rem; }
@charset "UTF-8";
/*
   Copyright 2018 Łukasz 'Severiaan' Grela GrelaDesign

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
.game-hud {
  background-color: transparent;
  padding: 10px 0;
  margin-bottom: 10px;
  /* bottom border of the hud */ }
  .game-hud .container {
    width: 320px;
    margin: 0 auto; }
    .game-hud .container div {
      display: inline-block;
      padding: 0 10px;
      width: 80px; }
  .game-hud.addition {
    border-bottom: 2px solid #388E3C; }
  .game-hud.subtraction {
    border-bottom: 2px solid #8BC34A; }
  .game-hud.multiplication {
    border-bottom: 2px solid #CDDC39; }
  .game-hud.division {
    border-bottom: 2px solid #FFEB3B; }

.question-counter {
  text-align: left; }

.icon-grade {
  width: 24px;
  height: 24px;
  position: relative;
  top: 5px;
  margin-right: 10px; }

.correct-answers {
  color: #4CAF50;
  text-align: right; }
  .correct-answers svg.icon-grade {
    fill: #FFC107; }

.gain-even .icon-grade,
.gain-odd .icon-grade {
  animation-duration: 0.5s;
  animation-iteration-count: 3;
  animation-timing-function: ease-out; }

.gain-even .icon-grade {
  animation-name: zoom-star-1; }

.gain-odd .icon-grade {
  animation-name: zoom-star-2; }

@keyframes zoom-star-1 {
  0% {
    transform: scale(1); }
  50% {
    opacity: .75; }
  100% {
    transform: scale(2);
    opacity: 0; } }

@keyframes zoom-star-2 {
  0% {
    transform: scale(1); }
  50% {
    opacity: .75; }
  100% {
    transform: scale(2);
    opacity: 0; } }
@charset "UTF-8";
/*
   Copyright 2018 Łukasz 'Severiaan' Grela GrelaDesign

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
.game-answers {
  width: 320px;
  margin: 0 auto; }
  .game-answers button {
    /* reset */
    background-color: #FFFFFF;
    /**/
    cursor: pointer; }
  .game-answers.locked button {
    cursor: default;
    pointer-events: none;
    background-color: #BDBDBD; }
  .game-answers hr {
    border-color: #BDBDBD;
    border-style: solid; }

.answer {
  padding: 20px;
  margin: 2px;
  min-width: 70px;
  border: 1px solid #BDBDBD;
  font-size: 1em; }
  .answer:focus {
    outline: none; }
  @media only screen and (max-device-height: 668px) and (orientation: landscape), screen and (max-device-height: 668px) and (orientation: portrait) {
    .answer {
      padding: 15px 5px; } }

.hidden {
  visibility: hidden; }
@charset "UTF-8";
/*
   Copyright 2018 Łukasz 'Severiaan' Grela GrelaDesign

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
.equation {
  margin: 0 auto;
  padding: 75px 0;
  width: 320px;
  display: table; }
  @media only screen and (max-device-height: 668px) and (orientation: landscape) {
    .equation {
      padding: 10px 0; } }
  @media only screen and (max-device-height: 668px) and (orientation: portrait) {
    .equation {
      padding: 40px 0; } }

.wrapper {
  display: table-cell;
  text-align: center;
  vertical-align: middle; }

.part {
  width: 50px;
  padding: 15px 5px;
  margin: 0px;
  display: inline-block;
  vertical-align: top; }
  @media only screen and (max-device-height: 668px) and (orientation: landscape) {
    .part {
      padding: 10px 5px;
      padding-top: 5px; } }
  @media only screen and (max-device-height: 668px) and (orientation: portrait) {
    .part {
      padding: 10px 5px; } }

.question {
  border: 2px solid #BDBDBD;
  border-radius: 5px; }
  .correct .question {
    border-color: #4CAF50;
    border-radius: 15px; }
  .incorrect .question {
    border-color: #F44336;
    border-radius: 0; }
@charset "UTF-8";
/*
   Copyright 2018 Łukasz 'Severiaan' Grela GrelaDesign

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
.game-over {
  padding-top: 1rem;
  text-align: left;
  width: 320px;
  margin: 0 auto; }
  .game-over .title {
    font-size: 2rem;
    margin: 1.5rem 0;
    text-align: center; }
    .game-over .title .p1 {
      color: #388E3C; }
    .game-over .title .p2 {
      color: #8BC34A; }
    .game-over .title .p3 {
      color: #CDDC39; }
  .game-over .content {
    display: block;
    margin: 1.5rem 0;
    text-align: center; }
  .game-over .footer {
    display: block;
    text-align: center;
    margin: 1.5rem 0; }
    .game-over .footer button {
      height: 75px;
      width: 75px;
      margin: 10px;
      border: none;
      background: none; }
      .game-over .footer button svg {
        fill: #FFFFFF;
        width: 50px;
        height: 50px;
        -webkit-transition: all .5s ease;
        -o-transition: all .5s ease;
        transition: all .5s ease; }
      .game-over .footer button:hover svg {
        -webkit-transform: rotate(1turn);
        -ms-transform: rotate(1turn);
        transform: rotate(1turn); }
      .game-over .footer button.menu-button {
        background-color: #E64A19; }
      .game-over .footer button.replay-button {
        background-color: #FF9800; }
@charset "UTF-8";
/*
   Copyright 2018 Łukasz 'Severiaan' Grela GrelaDesign

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
@keyframes fadeInLeft {
  from {
    opacity: 0;
    transform: translate3d(-100%, 0, 0); }
  to {
    opacity: 1;
    transform: none; } }

.feedback {
  margin-top: -57px;
  margin-bottom: 15px;
  height: 50px;
  /* message */
  /* navigate button */ }
  @media only screen and (max-device-height: 668px) and (orientation: landscape), screen and (max-device-height: 668px) and (orientation: portrait) {
    .feedback {
      margin-top: -15px;
      margin-bottom: -5px;
      height: 40px; } }
  .feedback .row {
    text-align: center;
    align-items: center;
    display: flex;
    margin: 0 auto;
    width: 320px; }
  .feedback .cell {
    display: inline-block;
    flex-grow: 1; }
  .feedback button.cell {
    animation-duration: 1s;
    animation-delay: 0.5s;
    animation-fill-mode: both;
    animation-name: fadeInLeft; }
  .feedback .mood-icon {
    display: inline-block;
    height: 32px;
    width: 32px;
    /*
        position: relative;
        top: 9px;
        */
    padding: 4px;
    margin: 4px; }
  .feedback .message {
    display: inline-block; }
    .feedback .message .correct-answer {
      color: #4CAF50;
      font-weight: bold;
      font-size: 1.25em;
      margin-left: 8px; }
  .feedback button {
    display: inline-block;
    background-color: transparent;
    border: none;
    width: 40px;
    height: 40px;
    cursor: pointer;
    margin-left: 8px;
    padding: 0; }
    .feedback button svg {
      fill: #212121;
      -webkit-transition: all .5s ease;
      transition: all .5s ease;
      width: 38px;
      height: 38px; }
      .feedback button svg:hover {
        transform: rotate(1turn); }

.feedback.incorrect .mood-icon {
  fill: #F44336; }

.feedback.correct .mood-icon {
  fill: #4CAF50; }
@charset "UTF-8";
/*
   Copyright 2018 Łukasz 'Severiaan' Grela GrelaDesign

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
.game {
  display: block; }
@charset "UTF-8";
/*
   Copyright 2018 Łukasz 'Severiaan' Grela GrelaDesign

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
.config {
  padding-top: 50px; }
  .config label {
    display: block;
    padding-bottom: 8px; }
  .config input,
  .config select {
    margin-left: 8px; }
@charset "UTF-8";
/*
   Copyright 2018 Łukasz 'Severiaan' Grela GrelaDesign

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
footer {
  position: absolute;
  bottom: 0;
  width: 100%;
  padding: 10px 0;
  font-size: 0.8em; }

@media only screen and (max-device-height: 668px) and (orientation: landscape) {
  footer {
    position: initial; } }
@charset "UTF-8";
/*
   Copyright 2018 Łukasz 'Severiaan' Grela GrelaDesign

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
.App .App-header .leftIconSlot button, .App .App-header .rightIconSlot button {
  border: none;
  background: none;
  padding: 0;
  margin: 0; }

.App {
  text-align: center; }
  .App .App-header {
    background-color: #3F51B5;
    height: 50px;
    padding: 20px;
    color: #FFFFFF;
    border-top: 8px #303F9F solid; }
    .App .App-header h3 {
      font-size: 1em;
      margin-top: 0.25em;
      color: #C5CAE9; }
    .App .App-header .App-title {
      font-size: 1.5em;
      margin-top: 0.35em;
      -webkit-transition: all 500ms ease-out;
      -moz-transition: all 500ms ease-out;
      -o-transition: all 500ms ease-out;
      transition: all 500ms ease-out; }
    .App .App-header.in-page .App-title {
      font-size: 1em;
      margin-bottom: .25em; }
    .App .App-header .leftIconSlot {
      position: absolute;
      left: 8px;
      top: 34px;
      height: 30px;
      width: 30px; }
      .App .App-header .leftIconSlot svg#logo-icon {
        height: 30px;
        fill: #FFFFFF; }
      .App .App-header .leftIconSlot svg#arrow-back {
        width: 30px;
        height: 30px;
        fill: #FFFFFF;
        -webkit-transition: all .2s ease;
        transition: all .2s ease; }
      .App .App-header .leftIconSlot button:hover svg#arrow-back {
        -moz-transform: rotate(1turn);
        transform: rotate(1turn); }
    .App .App-header .rightIconSlot {
      position: absolute;
      right: 8px;
      top: 33px;
      height: 40px; }
      .App .App-header .rightIconSlot button {
        width: 40px;
        height: 40px; }
        .App .App-header .rightIconSlot button svg {
          fill: #FFFFFF;
          -webkit-transition: all .5s ease;
          -o-transition: all .5s ease;
          transition: all .5s ease; }
        .App .App-header .rightIconSlot button:hover svg {
          -webkit-transform: rotate(1turn);
          -ms-transform: rotate(1turn);
          transform: rotate(1turn); }
  .App section.content {
    min-height: 180px; }
@charset "UTF-8";
/*
   Copyright 2018 Łukasz 'Severiaan' Grela GrelaDesign

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
.dd-menu {
  z-index: 100001;
  position: fixed; }
  .dd-menu.close {
    opacity: 0;
    visibility: hidden; }
  .dd-menu.open {
    opacity: 1;
    visibility: visible; }
  .dd-menu .cloak {
    position: fixed;
    width: 100%;
    height: 100%;
    left: 0;
    top: 0; }
  .dd-menu .dd-menu-container {
    position: fixed;
    width: 110px;
    top: 90px;
    right: 8px;
    background-color: #fff;
    box-shadow: 1px 1px 5px #888888; }
    .dd-menu .dd-menu-container button {
      display: block;
      width: 100px !important;
      margin: 0 auto !important;
      text-align: left; }
      .dd-menu .dd-menu-container button svg {
        margin-right: 8px;
        display: inline-block;
        position: relative;
        top: 5px;
        fill: #212121 !important; }
      .dd-menu .dd-menu-container button span.label {
        margin-bottom: 5px;
        display: inline-block;
        position: relative;
        top: -2px; }

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/